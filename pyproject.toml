[project]
name = "django-asgi-lifespan"
version = "0.5.0"
description = "Django ASGI handler with Lifespan Protocol support."
authors = [
    { name = "VÃ¡clav Dohnal", email = "vaclav.dohnal@gmail.com" }
]
urls = { "homepage" = "https://github.com/illagrenan/django-asgi-lifespan" }
license = "MIT"
readme = "README.md"
requires-python = ">=3.10, <3.14"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: Django",
    "Framework :: Django :: 4",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1"
]

dependencies = [
    # this would be nice, but it is not supported by PyPI: ^4.2 || ^5.0.3
    "Django>=4.2,<6,!=5.0.0,!=5.0.1,!=5.0.2",
    "asgiref>=3.0.0"
]

[dependency-groups]
dev = [
    "mypy>=1.17.1",
    "ruff>=0.12.4",
    "pyright>=1.1.403",

    # Releases
    "bump-my-version>=1.2.1",
    "twine>=6.1.0",
    "pytest-cov>=6.2.1",
    "pytest-asyncio>=1.1.0",
    "httpx>=0.28.1",
    "uvicorn[standard]>=0.35.0",
    "pytest-django>=4.11.1",

    # Compatibility with Python 3.13
    "uvloop>=0.21.0; sys_platform != 'win32' and python_version == '3.13'",
    "httptools>=0.6.4",

    # Documentation
    "mkdocs>=1.6.1",
    "mkdocs-include-markdown-plugin>=7.1.6",
    "mkdocs-material>=9.6.15",
    "mkdocstrings[python]>=0.29.1",
    "mkdocs-material-extensions>=1.3.1",
    "mkdocs-autorefs>=1.4.2",
    "mkdocs-glightbox>=0.4.0",

    # Misc
    "ipython>=8.30.0",
    "ipdb>=0.13.13",

    # Tests
    "daphne>=4.1.2",
    "hypercorn>=0.17.3",
    "granian>=1.6.4",
    "gunicorn>=23.0.0; platform_system == 'Linux'",
    "pytest>=8.4.1",
]

[build-system]
requires = ["uv_build>=0.8.0,<0.9"]
build-backend = "uv_build"

[tool.uv.build-backend]
# Specify that the module is in the root directory, not src/
module-root = "."
source-include = ["django_asgi_lifespan/py.typed"]
sdist-include = ["tests/**"]

[tool.pytest.ini_options]
minversion = "8.0"
norecursedirs = [".git", "__pycache__"]
DJANGO_SETTINGS_MODULE = "tests.django_test_application.settings"
addopts = "--verbose --color=yes --showlocals -r A --tb=auto -s -x"
python_files = [
    "tests.py",
    "test_*.py",
    "*_tests.py"
]
junit_suite_name = "django-asgi-lifespan"
junit_family = "xunit2"
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = '%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)'
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_mode = "auto"
testpaths = [
    "./tests/"
]

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # Pyflakes
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    "I", # isort
    "RUF", # ruff
    "LOG", # flake8-logging
    "ASYNC", # flake8-async
    "S", # flake8-bandit
    "BLE", # flake8-blind-except
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "FA", # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "ERA", # eradicate
    "PL", # pylint
    "PERF", # perflint
]
ignore = [
    "TRY003",
    "S101",
    "ISC001",
]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
