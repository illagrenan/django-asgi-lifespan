[project]
# Support Python 3.10+.
requires-python = ">=3.10"

[tool.poetry]
name = "django-asgi-lifespan"
version = "0.3.1"
homepage = "https://github.com/illagrenan/django-asgi-lifespan"
description = "Django ASGI handler with Lifespan Protocol support."
authors = ["VÃ¡clav Dohnal <vaclav.dohnal@gmail.com>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: Django",
    "Framework :: Django :: 4",
    "Framework :: Django :: 5.0"
]
packages = [
    { include = "django_asgi_lifespan" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = "^3.10 || ^3.11 || ^3.12"
# this would be nice, but it is not supported by PyPI: ^4.2 || ^5.0.3
Django = ">=4.2,<6, !=5.0.0,!=5.0.1,!=5.0.2"
asgiref = "^3"

[tool.poetry.group.dev.dependencies]
# Formatting & Linting
black = "==24.2.0"
isort = "^5.13.2"
mypy = "^1.8.0"
ruff = "^0.3.0"

# Releases
twine = "^5.0.0"

# Tests
pytest = "^8.1.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "==0.23.5"
httpx = "^0.27.0"
uvicorn = { version = "==0.21.1", extras = ["standard"] }
pytest-django = "^4.8.0"

# Documentation
mkdocs = "^1.5.3"
mkdocs-include-markdown-plugin = "^6.0.4"
mkdocs-material = "^9.5.12"
mkdocstrings = { extras = ["python"], version = "^0.24.1" }
mkdocs-material-extensions = "^1.3.1"
mkdocs-autorefs = "^1.0.1"

# Misc
ipython = "^8.22.2"
ipdb = "^0.13.13"
mkdocs-glightbox = "^0.3.7"

[tool.poetry.group.tests.dependencies]
daphne = "^4.1.0"
hypercorn = "^0.16.0"
granian = "^1.1.1"
gunicorn = { version = "^21.2.0", platform = "linux" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "8.0"
norecursedirs = [".git", "__pycache__"]
DJANGO_SETTINGS_MODULE = "tests.django_test_application.settings"
addopts = "--verbose --color=yes --showlocals -r A --tb=auto -s -x"
python_files = [
    "tests.py",
    "test_*.py",
    "*_tests.py"
]
junit_suite_name = "django-asgi-lifespan"
junit_family = "xunit2"
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = '%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)'
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
asyncio_mode = "auto"
testpaths = [
    "./tests/"
]

[tool.black]
line-length = 88
skip-string-normalization = false
target-version = ["py310", "py311", "py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff.lint]
select = [
    "E", # pycodestyle
    "F", # Pyflakes
    "B", # flake8-bugbear
    "SIM", # flake8-simplify
    "I", # isort
    "RUF", # ruff
    "LOG", # flake8-logging
    "ASYNC", # flake8-async
    "S", # flake8-bandit
    "BLE", # flake8-blind-except
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "FA", # flake8-future-annotations
    "ISC", # flake8-implicit-str-concat
    "ICN", # flake8-import-conventions
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "ERA", # eradicate
    "PL", # pylint
    "PERF", # perflint
]
ignore = [
    "TRY003"
]

[tool.mypy]
python_version = "3.10"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true
profile = "black"
# you can skip files as below
#skip_glob = docs/conf.py
